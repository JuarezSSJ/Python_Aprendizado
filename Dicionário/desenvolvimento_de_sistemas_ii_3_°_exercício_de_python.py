# -*- coding: utf-8 -*-
"""Desenvolvimento de Sistemas II - 3 ° Exercício de Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S8H6wbmWo44fdzLxUmhAHWBUiWKj0Vf3
"""

dic_professores = {}
dic_disciplina = {}
dic_aluno = {}
dic_prof_disciplina = {}
dic_notas = {}

#carga de dados para efetuar teste
dic_professores = {12345: "Manoel de Castro Almeida", 52452: "Ana Maria da Conceição", 5142: "‘Carlos Augusto’"}
dic_disciplina = {"BD001": "‘Banco de Dados I’", "DS001": "‘Desenvolvimento de Sistemas I’", "LP001": "‘Lógica de Programação"}
dic_aluno = {10: "‘Joaquim José da Silva Xavier", 12: "‘Maria Paula de Souza’", 30: "Camila Machado Andrade’"}

def menu():
  print("\n\nGestão Escolar:")
  print("1 – Cadastro de professores")
  print("2 – Cadastro de disciplinas")
  print("3 – Alocação de professores a disciplinas")
  print("4 – Cadastro de Alunos")
  print("5 – Lançamento de Notas")
  print("6 – Impressão de Boletim")
  print("7 - Sair")
  opcao_menu = int(input("\nDigite a opção desejada: "))
  return opcao_menu

def cadastros(dicionario, chave, valor):
  #cadastro para dic. prof , aluno e diciplina
  dicionario [chave] = valor
  print("Cadastro realizado com sucesso!")

def verificacao(dicionario, matricula):
  verificador = 0
  for chave in dicionario.keys():
    if chave == matricula:
      verificador += 1
      break
  if verificador == 0:
    print("Cadastro não encontrado, favor digite um cadastro valido.") 
  return verificador 

def prof_disciplina(dic_prof, dic_disc, dic_prof_disc):
  #cadastro de professor x disciplina , realizei o cod até a verificação se o professor ja estava cadastrado, tentar tranformar isso em uma def para usar 2 vezes sem repetir o cod.
  while True:
    materias = []
    matricula_prof = int(input("Digite a matricula do professor: "))
    verific = verificacao(dic_prof, matricula_prof)
    if verific == 0:
      continue
    while True:
      materias_prof = input("Digite a materia lecionada pelo professor {} ".format(dic_prof[matricula_prof]))
      verific = verificacao(dic_disc, materias_prof)
      if verific == 0:
        continue
      materias.append(materias_prof)
      print("Cadastro realizado com sucesso!")
      continuar_cadastro = input("Deseja cadastrar outra Materia S/N : ")
      if continuar_cadastro == "N":
        break
    dic_prof_disc[matricula_prof] = materias
    continua_cadastro = input("Deseja realizar uma nova Alocação de professores a disciplinas S/N : ")
    if continua_cadastro == "N":
      break 

def cadastro_notas (dic_aluno, dic_disc, dic_notas):
  while True:
    matricula_aluno = int(input("Digite a matricula do Aluno: "))
    verific = verificacao(dic_aluno, matricula_aluno)
    if verific == 0:
      continue
    dic_notas_materia = {}
    while True:
      notas = []
      materia_aluno = input("Digite o codigo da materia para lancar as notas do aluno {}: ".format(dic_aluno[matricula_aluno]))
      verific = verificacao(dic_disc, materia_aluno)
      if verific == 0:
        continue
      while True:
        av1 = float(input("Digite a nota da AV-1 da materia {} do aluno {}: ".format(dic_disc[materia_aluno], dic_aluno[matricula_aluno])))
        if av1 < 0 or av1 > 10:
          print("Valor errado!")
          continue
        else:
          break
      while True:
        av2 = float(input("Digite a nota da AV-2 do aluno {}: ".format(dic_aluno[matricula_aluno])))
        if av2 < 0 or av2 > 10:
          print("Valor errado!")
          continue
        else:
          break
      notas.extend([av1 , av2])
      dic_notas_materia [materia_aluno] = notas
      continua_cadastro = input("Deseja lançar notas em uma nova disciplinas do aluno {} S/N : ".format(dic_aluno[matricula_aluno]))
      if continua_cadastro == "N":
        break
    dic_notas [matricula_aluno] = dic_notas_materia
    continua_cadastro = input("Deseja lançar notas para outro aluno S/N : ")
    if continua_cadastro == "N":
      break
    
def verificar_duplicidade (dicionario, cadastro):
  verificador = 0
  lista = dicionario.keys()
  if cadastro in lista:
    print("Já possui cadastro, favor digitar outro!")
    verificador = 1
  return verificador

def impressao_boletim (dic_aluno, dic_notas, dic_disc):
  while True:
    matricula_aluno = int(input("Digite a matricula do Aluno: "))
    verific = verificacao(dic_aluno, matricula_aluno)
    if verific == 0:
      continue
    lista = dic_notas.keys()
    if not matricula_aluno in lista:
      print("Aluno {} não possui notas cadastradas!".format(dic_aluno[matricula_aluno]))
      break
    print(40 * "=")
    print("\tBoletim")
    print(40 * "=")
    print("Matrícula: {}".format(matricula_aluno))
    print("Nome do aluno: {}".format(dic_aluno[matricula_aluno]))
    print("Código \tNome da disciplina \t\t\t\tAV-1 \tAV2 \tMédia \tResultado Final")
    lista = dic_notas[matricula_aluno].keys()
    for diciplina in lista:
      media = (dic_notas[matricula_aluno][diciplina][0] + dic_notas[matricula_aluno][diciplina][1])/2
      if media >= 7:
        resultado = "Aprovado"
      else:
        resultado = "Reprovado"
      print("{} \t{} \t\t\t\t{} \t{} \t{} \t{}".format(diciplina, dic_disc[diciplina], dic_notas[matricula_aluno][diciplina][0], dic_notas[matricula_aluno][diciplina][1], media, resultado))
    break

#prof_disciplina(dic_professores, dic_disciplinas, dic_prof_disciplina)
#cadastro_notas(dic_alunos, dic_disciplinas, dic_notas)
#impressao_boletim(dic_alunos, dic_notas, dic_disciplinas)

while True:
  opcao = menu()
  if opcao == 1:
    while True:
      #1 – Cadastro de professores
      matricula_prof = int(input("Digite a matricula do professor: "))
      verif = verificar_duplicidade(dic_professores, matricula_prof)
      if verif == 1:
        continue
      nome_prof = input("Nome do professor: ")
      cadastros(dic_professores, matricula_prof, nome_prof)
      continua_cadastro = input("Deseja cadastrar outro professor S/N: ")
      if continua_cadastro == "N":
        break
  elif opcao == 2:
    #2 – Cadastro de disciplinas
    while True:
      disciplina = input("Digite o codigo da disciplina: ")
      verif = verificar_duplicidade(dic_disciplina, disciplina)
      if verif == 1:
        continue
      nome_disc = input("Digite o nome da disciplina: ")
      cadastros(dic_disciplina, disciplina, nome_disc)
      continua_cadastro = input("Deseja cadastrar outro professor S/N: ")
      if continua_cadastro == "N":
        break
  elif opcao == 3:
    #3 – Alocação de professores a disciplinas
    prof_disciplina(dic_professores, dic_disciplina, dic_prof_disciplina)

  elif opcao == 4:
    #4 – Cadastro de Alunos
    while True:
      matricula_aluno = int(input("Digite a matricula do Aluno: "))
      verif = verificar_duplicidade(dic_aluno, matricula_aluno)
      if verif == 1:
        continue
      nome_aluno = input("Nome do Aluno: ")
      cadastros(dic_aluno, matricula_aluno, nome_aluno)    
      continua_cadastro = input("Deseja cadastrar outro Aluno S/N: ")
      if continua_cadastro == "N":
        break  
  elif opcao == 5:
    #5 – Lançamento de Notas
      cadastro_notas (dic_aluno, dic_disciplina, dic_notas) 
  elif opcao == 6:
    #6 – Impressão de Boletim
    impressao_boletim(dic_aluno, dic_notas, dic_disciplina)         
  elif opcao == 7:
    #7 – Sair
    print("Volte Sempre!")
    break
  else:
      print("\nOpção inválida.\n")